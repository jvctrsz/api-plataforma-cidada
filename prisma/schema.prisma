generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model usuarios {
  id            Int           @id @default(autoincrement())
  nome          String        @db.VarChar(100)
  email         String        @unique @db.VarChar(150)
  cpf           String        @unique @db.VarChar(14)
  celular       String        @db.Char(15)
  telefone      String?       @db.VarChar(14)
  senha         String?
  role          Role?         @default(usuario)
  google_id     String?       @unique
  criado_em     DateTime?     @default(now()) @db.Timestamp(6)
  redefinido_em DateTime?
  valido        Boolean       @default(false)
  solicitacao   solicitacao[]
  secretaria    secretaria?
}

model secretaria {
  id              Int           @id @default(autoincrement())
  nome            String        @unique @db.VarChar(150)
  ativo           Boolean       @default(true)
  celular         String?       @db.VarChar(15)
  telefone        String?       @db.VarChar(14)
  email           String?       @db.VarChar(150)
  logradouro      String?       @db.VarChar(150)
  numero          String?       @db.VarChar(10)
  cep             String?       @db.VarChar(9)
  bairro          String?       @db.VarChar(30)
  cidade          String?       @db.VarChar(100)
  uf              String?       @db.Char(2)
  descricao       String?       @db.VarChar(255)
  criado_em       DateTime?     @default(now())
  atualizado_em   DateTime?
  whatsapp        String?       @db.VarChar(15)
  secretario_nome String
  secretario_id   Int           @unique
  usuarios        usuarios      @relation(fields: [secretario_id], references: [id])
  solicitacao     solicitacao[]
}

model solicitacao {
  id            Int        @id @default(autoincrement())
  endereco      String     @db.VarChar(150)
  numero        String     @db.VarChar(10)
  referencia    String?    @db.VarChar(100)
  bairro        String     @db.VarChar(100)
  cidade        String     @db.VarChar(100)
  uf            String     @db.Char(2)
  cep           String     @db.Char(9)
  observacao    String?    @db.VarChar(500)
  status        Status     @default(criado)
  secretaria_id Int
  usuarios_id   Int
  descricao     String     @db.VarChar(180)
  atualizado_em DateTime?
  criado_em     DateTime   @default(now())
  secretaria    secretaria @relation(fields: [secretaria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_solicitacao_secretaria")
  usuarios      usuarios   @relation(fields: [usuarios_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_solicitacao_usuarios")
}

enum Status {
  criado
  pendente
  andamento
  finalizado
}

enum Role {
  usuario
  funcionario
  admin
}
